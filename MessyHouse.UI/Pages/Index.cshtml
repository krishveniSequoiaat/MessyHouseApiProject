@page
@model IndexModel

<div class="mb-3">
    <button class="btn btn-primary mr-2" id="addItemBtn" data-bs-toggle="modal" data-bs-target="#addItemModal">
        + Add Item
    </button>
    <button class="btn btn-primary mr-2" id="addStorageBoxBtn" data-bs-toggle="modal"
        data-bs-target="#addStorageBoxModal">
        + Add Storage Box
    </button>
</div>

<div class="mb-3">
    <input type="text" id="searchInput" class="form-control" placeholder="Search..." />
</div>

<!-- Tabs -->
<ul class="nav nav-tabs" id="mainTabs">
    <li class="nav-item">
        <a class="nav-link active" id="items-tab" data-bs-toggle="tab" href="#items">Inventory</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="boxes-tab" data-bs-toggle="tab" href="#boxes">Storage Boxes</a>
    </li>

</ul>

<div class="tab-content">
    <div class="tab-pane fade show active" id="items">
        <table id="itemsTable" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Barcode</th>
                    <th>Tag</th>
                    <th>Image</th>
                    <th></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="tab-pane fade" id="boxes">
        <table id="storageBoxTable" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Location</th>
                    <th>Barcode</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<!-- Include partial -->
<partial name="Partials/_AddItem" />
<partial name="Partials/_AddStorageBox" />

@section Scripts {
    <script>
        const apiBaseUrl = "http://ec2-16-170-224-206.eu-north-1.compute.amazonaws.com/:5223";

        function loadStorageBoxes() {
            $.get(apiBaseUrl + "/storageboxes", function (data) {
                let rows = "";
                data.forEach(box => {
                    rows += `<tr> 
                                                                                                                                                                            <td>${box.id}</td>
                                                                                                                                                                            <td>${box.name}</td>
                                                                                                                                                                            <td>${box.location}</td>
                                                                                                                                                                            <td>${box.barcode}</td>
                                                                                                                                                                            <td>
                                                                                                                                                                            <button class="btn btn-link text-primary edit-btn" data-id="${box.id}" onclick="editStorageBox(${box.id})">
                                                                                                                                                                               <i class="fa-solid fa-pen-to-square"></i></button>
                                                                                                                                                            
                                                                                                                                                            
                                                                                                                                                                            <button class="btn btn-link text-danger delete-btn" data-id="${box.id}" onclick="deleteStorageBox(${box.id})">
                                                                                                                                                                            <i class="fa-solid fa-trash"></i>
                                                                                                                                                                            </button>
                                                                                                                                                                            </td>
                                                                                                                                                                            </tr>`;
                });
                $("#storageBoxTable tbody").html(rows);
            });
        }


        function loadItems() {
            $.getJSON(apiBaseUrl + "/items", function (data) {
                let rows = "";
                $.each(data, function (i, item) {
                    rows += `<tr>
                                                <td>${item.id}</td>
                                                <td>${item.name}</td>
                                                <td>${item.barcode}</td>
                                                <td>${item.tag}</td>
                                                <td>${item.imageUrl ? `<img src="${item.imageUrl}" style="width:80px;height:80px;object-fit:cover;border-radius:8px;"/>` : "No Image"}</td>
                                                <td>
                                                    <button class="btn btn-link text-primary edit-btn" data-id="${item.id}" onclick="editItem(${item.id})">
                                                        <i class="fa-solid fa-pen-to-square"></i>
                                                    </button>
                                
                                                    <button class="btn btn-link text-danger delete-btn" data-id="${item.id}" onclick="deleteItem(${item.id})">
                                                        <i class="fa-solid fa-trash"></i>
                                                    </button>
                                                </td>
                                        </tr>`;
                });
                $("#itemsTable tbody").html(rows);
            });
        }

        function generateBarcode() {
            const random = Math.floor(10000000 + Math.random() * 90000000);
            return `BOX-${random}`;
        }

        function loadStorageBoxOptions(selectedBarcode = null) {
            $.get(apiBaseUrl + "/storageboxes", function (data) {
                let options = '<option value="">--Select Storage box--</option>';
                data.forEach(box => {
                    options += `<option value="${box.barcode}" ${box.barcode === selectedBarcode ? 'selected' : ''}>${box.name} (${box.location})</option>`;
                });
                $("#boxBarcodeSelect").html(options);
            });
        }

        function filterItems(query) {
            $("#itemsTable tbody tr").each(function () {
                const itemName = $(this).find("td:nth-child(2)").text().toLowerCase();
                const itemTag = $(this).find("td:nth-child(4)").text().toLowerCase();
                const barcode = $(this).find("td:nth-child(3)").text().toLowerCase();
                if (itemName.includes(query) || itemTag.includes(query) || barcode.includes(query)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        function filterStorageBoxes(query) {
            $("#storageBoxTable tbody tr").each(function () {
                const boxName = $(this).find("td:nth-child(2)").text().toLowerCase();
                const boxLocation = $(this).find("td:nth-child(3)").text().toLowerCase();
                const barcode = $(this).find("td:nth-child(4)").text().toLowerCase();
                if (boxName.includes(query) || boxLocation.includes(query) || barcode.includes(query)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        function IsMobileDevice() {
            return /Mobi|Android/i.test(navigator.userAgent);
        }

        function editItem(id) {
            // Fetch item details and populate the form for editing
            $.get(apiBaseUrl + `/items/${id}`, function (item) {
                $("#itemId").val(item.id);
                $("#itemName").val(item.name);
                $("#itemTag").val(item.tag);
                loadStorageBoxOptions(item.barcode);
                $("#boxBarcodeSelect").val(item.barcode);
                $("#previewImg").attr("src", item.imageUrl);
                $("#imagePreview").show();
                $("#desktopCameraArea").hide();
                $("#mobileCameraInput").hide();
                $("#addItemModalLabel").text("Edit Item");
                $("#addItemModal").modal("show");
            });
        }

        function deleteItem(id) {
            if (confirm("Are you sure you want to delete this item?")) {
                $.ajax({
                    url: apiBaseUrl + `/items/${id}`,
                    type: "DELETE",
                    success: function () {
                        alert("Item deleted successfully");
                        loadItems();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            }
        }

        function editStorageBox(id) {
            // Fetch box details and populate the form for editing
            $.get(apiBaseUrl + `/storageboxes/${id}`, function (box) {
                $("#boxId").val(box.id);
                $("#boxName").val(box.name);
                $("#boxLocation").val(box.location);
                $("#boxBarcode").val(box.barcode);
                $("#addStorageBoxModalLabel").text("Edit Storage Box");
                $("#addStorageBoxModal").modal("show");
            });
        }

        function deleteStorageBox(id) {
            if (confirm("Are you sure you want to delete this storage box?")) {
                $.ajax({
                    url: apiBaseUrl + `/storageboxes/${id}`,
                    type: "DELETE",
                    success: function () {
                        alert("Storage Box deleted successfully");
                        loadStorageBoxes();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            }
        }


        $(document).ready(function () {
            loadItems();

            $('#items-tab').on('shown.bs.tab', function () { loadItems() });
            $('#boxes-tab').on('shown.bs.tab', function () { loadStorageBoxes() });


            $("#saveItemBtn").on("click", function (event) {
                event.preventDefault();

                const id = $("#itemId").val();
                const formData = new FormData($("#addItemForm")[0]);
                const method = id ? "PUT" : "POST";
                const url = id ? `${apiBaseUrl}/items/${id}` : `${apiBaseUrl}/items`;

                if (!IsMobileDevice() && capturedBlob) {
                    formData.set('image', capturedBlob, 'captured.jpg');
                }


                $.ajax({
                    url: url,
                    type: method,
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert("Item " + (method === "POST" ? "added" : "updated") + " successfully");
                        $("#addItemModal").modal("hide");
                        $("#addItemForm")[0].reset();
                        loadItems();
                        capturedBlob = null;
                        $('#imagePreview').hide();
                        $('#previewImg').attr('src', '#');
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            });


            $("#saveStorageBoxBtn").click(function (event) {
                event.preventDefault();
                const formData = new FormData($("#addStorageBoxForm")[0]);

                const id = $("#boxId").val();
                const method = id ? "PUT" : "POST";
                const url = id ? `${apiBaseUrl}/storageboxes/${id}` : `${apiBaseUrl}/storageboxes`;

                $.ajax({
                    url: url,
                    type: method,
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        alert("Storage Box " + (method === "POST" ? "added" : "updated") + " successfully");
                        $("#addStorageBoxModal").modal("hide");
                        $("#addStorageBoxForm")[0].reset();
                        loadStorageBoxes();
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            });

            $("#addStorageBoxBtn").click(() => {
                // Generate a new random barcode each time modal opens
                $("#boxBarcode").val(generateBarcode());
                $("#addStorageBoxModalLabel").text("Add Storage Box");
                $("#addStorageBoxModal").modal("show");
            });

            $("#addItemBtn").click(() => {
                loadStorageBoxOptions();
                $("#itemId").val('');
                if (IsMobileDevice()) {
                    $("#mobileCameraInput").show();
                    $("#desktopCameraArea").hide();
                } else {
                    $("#mobileCameraInput").hide();
                    $("#desktopCameraArea").show();
                }

                $("#addItemModalLabel").text("Add Item");
                $("#addItemModal").modal("show");
            });


            $("#searchInput").on('keyup', function () {
                const query = $(this).val().toLowerCase();
                if ($('#items-tab').hasClass('active')) {
                    filterItems(query);
                } else if ($('#boxes-tab').hasClass('active')) {
                    filterStorageBoxes(query);
                }
            });

            let capturedBlob = null;

            if (IsMobileDevice()) {
                $("#mobileCameraInput").show();
                $("#desktopCameraArea").hide();
            } else {
                $("#mobileCameraInput").hide();
                $("#desktopCameraArea").show();

                const video = document.getElementById('video');
                const canvas = document.getElementById('canvas');
                const captureBtn = document.getElementById('captureBtn');
                const context = canvas.getContext('2d');

                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(stream => {
                        video.srcObject = stream;
                    })
                    .catch(err => {
                        console.error("Error accessing camera: ", err);
                    });

                captureBtn.addEventListener('click', () => {
                    context.drawImage(video, 0, 0, canvas.width, canvas.height);
                    canvas.toBlob(blob => {
                        capturedBlob = blob;
                    }, 'image/jpeg');
                    canvas.style.display = 'block';
                });
            }

            $('#addItemModal').on('hidden.bs.modal', function () {
                $('#addItemForm')[0].reset();
                capturedBlob = null;
                $('#canvas').hide();

            });

            $('#addStorageBoxModal').on('hidden.bs.modal', function () {
                $('#addStorageBoxForm')[0].reset();
            });

        });
    </script>
}